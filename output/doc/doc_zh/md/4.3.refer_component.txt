4.3 引用组件
--------------

&nbsp;

#### 编辑 markdown 文本

![editor](md/res/edit_mark.png)

Markdown 编辑器（如上图）提供若干便利的功能：

1. 编辑中点 Apply 按钮让当前修改立即生效，而不必关闭当前弹窗   
不妨把编辑器弹窗往右边拖一拖，空出左侧位置让位于其下的被编辑构件可见，随时修改、随时 Apply、随时看效果。

2. 编辑 markdown 时，可从右侧资源页中拖入样板，相应的转义标签代码将自动插入。

3. 编辑 markdown 时，可从右侧 resource 页中拖入图片文件，相应代码将自动生成   
如果把预览的图片拖进来，将自动插入转义标签代码，如果把文件名前面的小图标拖进来，将生成 markdown 格式的图片引用。

4. 在胶片页选择一个或多个组件，按 `Cmd + C`（或 `Ctrl + C`）拷贝，然后在 markdown 编辑器中按 `Cmd + V`（或 `Ctrl + V`）可粘贴相应转义标签代码。

#### 在 markdown 引用外部组件

在 MarkedDiv 或 MarkedTable 组件的 markdown 文本中，允许使用的转义标签有两类，一类是新建构件，比如：

``` md
<div $=Panel width='{200}' height='{100}' sty__='{{"background":"#ccc"}}'></div>
```

另一类是引用在本构件外已存在的组件，比如：

``` md
<div $=".body.2.0"></div>
```

这两者在描述上主要差别是，`$` 属性值是否以 `'.'` 或 `'/'` 开头，若是，表示它是路径字串，是引用现成构件，若不是，则视作创建指定类型的构件。

后一类引用现成组件，在现实胶片制作中应用非常广泛。因为往胶片页拖一个样板，然后可视化、交互式的配置它的属性，创造组件的过程很舒服，效率也高，然后，在 markdown 文本中到处引用它（这里所谓的引用，实质是系统复制它创建新构件）。

快速获得胶片页中一个组件的 “引用描述”，可以这么操作：
1. 选中指定组件
2. 然后点击 Copy as linker 浮动按钮  ![copy](md/res/copy_btn2.png)
3. 最后在编辑 markdown 文本时，用 `Cmd + V` （或 `Ctrl + V`）粘贴

#### 使用 auto 命名

引用现成组件还有一个问题待解决，从资源页中拖入样板新建的组件，自动取一个 key 值，为避免重名，系统给它分配一个不重复的数字，这时如果存盘再读入，自动分配的 key 值可能会变化，导致引用它的路径发生变化，引用从而失效。

为避免这个问题，我们通常给被引用的组件指定 key 值，用有含义的字串名称。同样，基于相同原因，被引用组件所在胶片页，也应固定 key 值。

Shadow Slide 可视设计器支持一种以 `'auto'` 作前缀的命名方式，`auto` 之后要跟 `0, 1, 2` 等数字。以此指定 key 值的构件，在设计态下复制时，既能维持 `'auto'` 前缀且自动编号，存盘后从文件读回时 key 命名将保持不变。如果用户设计一些样例构件，供他人拷贝使用时，不妨以 `'auto'` 前缀加数字编号来指定 key 值。

&nbsp;
